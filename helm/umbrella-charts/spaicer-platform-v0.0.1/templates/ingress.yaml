apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: central-dispatcher
  annotations:
#    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
#    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
#    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
#    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
#    nginx.org/websocket-services: {{ .Values.emqxmqttbroker.fullnameOverride }}
#    nginx.ingress.kubernetes.io/websocket-services: {{ .Values.emqxmqttbroker.fullnameOverride }}
#    nginx.ingress.kubernetes.io/allow-http: "true"
#    nginx.ingress.kubernetes.io/secure-backends: "false"
#    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  rules:
    - host: {{ .Values.ingress.subDomain }}.{{ .Values.global.domain }}
      http:
        paths:
          - path: /dsc
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.dataspaceconnector.fullnameOverride }}
                port:
                  number: 80
          - path: /emqx-ws
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.emqxmqttbroker.fullnameOverride }}
                port:
                  number: 8083
          - path: /emqx-wss
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.emqxmqttbroker.fullnameOverride }}
                port:
                  number: 8084
          - path: /v2
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ .Values.dataspaceconnector.fullnameOverride }}
                port:
                  number: 80
  tls:
    - hosts:
      - {{ .Values.ingress.subDomain }}.{{ .Values.global.domain }}
      secretName: www-tls
