---
# Default values for this helm chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Namespace (i.e., spaicerns1) must be maintained in multiple parameters within this file

#########################################################################################################
tags:  # see ./Chart.yaml @url: https://helm.sh/docs/topics/charts/#tags-and-condition-fields-in-dependencies
  nginx: true
#  dsc: true
  emqx: true
  nodered: true
  airflow: true
  prototype-uc1-narrative1-digital-coil: true
  digital-coil-ui: true
  annotator-module: true
  oauth2-proxy: true

global:
  domain: ""
  # Subdomain of oauth2-proxy referenced by external oauth2 provider
  authDomain: "auth"
  # Name of the oauth2-proxy service referenced by all ingress definitions
  oauth2_proxy_name: "oauth2-proxy"
  # Port of the oauth2-proxy service referenced by all ingress definitions
  oauth2_proxy_port: 4180
  # Secrets used by oauth2-proxy to connect to the external oauth2 provider
  oauth_client_id: ""
  oauth_client_secret: ""

#Dataspace Connector
dataspaceconnector:
  fullnameOverride: "spaicerns1-helm-dsc"
  image:
    tag: "6.4.0"

# EMQ X (MQTT Broker)
emqxmqttbroker:
  subDomainDashboard: "emqx-dashboard"
  subDomainApi: "emqx-api"
  fullnameOverride: "spaicerns1-helm-emqx"
  replicaCount: 1

# Node-Red
nodered:
  subDomain: "node-red"
  fullnameOverride: "spaicerns1-helm-nodered"

# Apache Airflow
#airflow:
#  fullnameOverride: "spaicerns1-airflow"
# To be contributed by version 1.4.0
#  createUserJob:
#    useHelmHooks: false

# Ingress
ingress:
  subDomain: "dispatcher"
  controller:
    ingressClassResource:
      default: true
    watchIngressWithoutClass: true
    extraArgs:
      default-ssl-certificate: "spaicerns1/www-tls"  # K8_NAMESPACE/K8_SECRET_NAME @url: https://kubernetes.github.io/ingress-nginx/user-guide/tls/#consumer-ssl-certificate
    service:
      annotations:
        # Let Gardener manage external DNS records for this Service. See https://gardener.cloud/documentation/guides/administer_shoots/dns_names/ & https://gardener.cloud/documentation/guides/administer_shoots/request_cert/
        cert.gardener.cloud/secretname: "www-tls"
        dns.gardener.cloud/dnsnames: "" # GARDENER_CLUSTER_NAME.GARDENER_PROJECT_NAME.shoot.canary.k8s-hana.ondemand.com
        dns.gardener.cloud/ttl: "600"
        dns.gardener.cloud/class: "garden"
  tcp:
    1883: "spaicerns1/spaicerns1-helm-emqx:1883"
    8883: "spaicerns1/spaicerns1-helm-emqx:8883"

### Smart Resilience Services

# Smart Resilience Service - Digital Coil
digitalcoilbackend:
  namespace: ""
  appName: "digital-coil-backend"
  image: "ghcr.io/spaicer/prototype-uc1-narrative1-digital-coil:main"
  imageCredentials: # needed for imagePullSecret docker-registry-github
    enabled: 1
    registry: "ghcr.io"
    username: ""
    accessToken: ""
  containerIngressRouting:
    - name: http8080
      ingressPort: 8080
      containerPort: 8080
      subDomain: "digitalcoilbackend."

digitalcoilui:
  namespace: ""
  appName: "digital-coil-ui"
  image: "ghcr.io/spaicer/digital-coil:main"
  imageCredentials: # needed for imagePullSecret docker-registry-github
    enabled: 1
    registry: "ghcr.io"
    username: ""
    accessToken: ""
  containerIngressRouting:
    - name: http8080
      ingressPort: 8080
      containerPort: 80
      subDomain: "digitalcoilui."

### AI Modules

# AI Module - Annotator
annotatormodule:
  namespace: ""
  appName: "annotator-module"
  image: "ghcr.io/spaicer/annotator-module:main"
  imageCredentials: # needed for imagePullSecret docker-registry-github
    enabled: 1
    registry: "ghcr.io"
    username: ""
    accessToken: ""
  containerIngressRouting:
    - name: http8080
      ingressPort: 8080
      containerPort: 8080
      subDomain: "annotatormodule."