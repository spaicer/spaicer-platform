apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "dataspace-connector.fullname" . }}
  labels:
    {{- include "dataspace-connector.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "dataspace-connector.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dataspace-connector.selectorLabels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dataspace-connector.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            {{- include "dataspace-connector.env-variables" . | nindent 12 }}
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
              {{- if eq (.Values.env.config.SERVER_SSL_ENABLED) "true" }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
              httpHeaders:
              - name: Authorization
                value: 'Basic {{(printf "%s:%s" .Values.env.secrets.SPRING_SECURITY_USER_NAME .Values.env.secrets.SPRING_SECURITY_USER_PASSWORD) | b64enc }}'
            initialDelaySeconds: 15
            failureThreshold: 1
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
              {{- if eq (.Values.env.config.SERVER_SSL_ENABLED) "true" }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
              httpHeaders:
              - name: Authorization
                value: 'Basic {{(printf "%s:%s" .Values.env.secrets.SPRING_SECURITY_USER_NAME .Values.env.secrets.SPRING_SECURITY_USER_PASSWORD) | b64enc }}'
            initialDelaySeconds: 10
            periodSeconds: 3
          startupProbe:
            httpGet:
              path: /
              port: http
              {{- if eq (.Values.env.config.SERVER_SSL_ENABLED) "true" }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            failureThreshold: 30
            periodSeconds: 3
          volumeMounts:
            - name: certs
              mountPath: /var/run/certs/
              readOnly: true
            - name: config
              mountPath: /etc/dataspace-connector/
              readOnly: true
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: certs
          secret:
            secretName: {{ include "dataspace-connector.fullname" . }}-certs
        - name: config
          secret:
            secretName: {{ include "dataspace-connector.fullname" . }}-config
