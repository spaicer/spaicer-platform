# See https://porter.sh/authoring-bundles for documentation on how to configure your bundle

name: spaicer-platform-edge
version: 0.0.1
description: "Run the SPAICER Platform on the Edge"
# invocationImage: spaicer/spaicer-platform-edge:v0.0.1
# tag: spaicer/spaicer-platform-edge-bundle:v0.0.1
registry: ghcr.io/spaicer

dockerfile: Dockerfile.tmpl

parameters:
  - name: namespace
    description: "Namespace to install platform"
    type: string
    default: "spaicerns1"
  - name: helm_release
    description: "Helm release name"
    type: string
    default: "spaicerns1-helm"
  - name: domain # Example:"KUBERNETES_CLUSTER_NAME.KUBERNETES_CLUSTER_PROJECT_NAME.shoot.canary.k8s-hana.ondemand.com"
    description: "Domain name"
    type: string
  - name: github-spaicer-user
    description: "GitHub SPAICER username"
    type: string
  - name: github-spaicer-token
    description: "GitHub SPAICER auth token"
    type: string
  - name: oauth_client_id
    description: "OAuth Client ID"
    type: string
  - name: oauth_client_secret
    description: "OAuth Client Secret"
    type: string

outputs:
  - name: CLUSTER_IP_ADDRESS
    description: "IP Address assigned to the Cluster Load Balancer"
    type: string
    applyTo:
      - install
      - upgrade

mixins:
  - exec
  - helm3:
      clientVersion: v3.7.0
      repositories:
        stable:
          url: "https://charts.helm.sh/stable"

# A specific kubeconfig file is provided via CLI command porter credential generate
credentials:
  - name: kubeconfig
    description: "Kube config file with permissions to deploy on the target environment"
    path: /root/.kube/config
    applyTo:
      - install
      - uninstall

install:
  - helm3:
      description: "Deploy SPAICER Platform Edge with Helm"
      name: "{{bundle.parameters.helm_release}}"
      namespace: "{{bundle.parameters.namespace}}"
      chart: helm/umbrella-charts/spaicer-platform-v0.0.1
      wait: true
      timeout: 5m
      debug: true
      set:
        global.domain: "{{bundle.parameters.domain}}"
        global.oauth_client_id: "{{bundle.parameters.oauth_client_id}}"
        global.oauth_client_secret: "{{bundle.parameters.oauth_client_secret}}"
        ingress.controller.service.annotations.dns\.gardener\.cloud/dnsnames: "*.{{bundle.parameters.domain}}"
        digitalcoilbackend.namespace: "{{bundle.parameters.namespace}}"
        digitalcoilbackend.imageCredentials.username: "{{bundle.parameters.github-spaicer-user}}"
        digitalcoilbackend.imageCredentials.accessToken: "{{bundle.parameters.github-spaicer-token}}"
        digitalcoilui.namespace: "{{bundle.parameters.namespace}}"
        digitalcoilui.imageCredentials.username: "{{bundle.parameters.github-spaicer-user}}"
        digitalcoilui.imageCredentials.accessToken: "{{bundle.parameters.github-spaicer-token}}"
        annotatormodule.namespace: "{{bundle.parameters.namespace}}"
        annotatormodule.imageCredentials.username: "{{bundle.parameters.github-spaicer-user}}"
        annotatormodule.imageCredentials.accessToken: "{{bundle.parameters.github-spaicer-token}}"
      outputs:
        - name: CLUSTER_IP_ADDRESS
          resourceType: service
          resourceName: "{{bundle.parameters.helm_release}}-ingress-platform-controller"
          namespace: "{{bundle.parameters.namespace}}"
          jsonPath: "{.spec.clusterIP}"
  - exec:
      description: "Echo the IP Address"
      command: "bash"
      arguments:
        - "utils.sh"
        - "echo-ip {{bundle.outputs.CLUSTER_IP_ADDRESS}}"
  - exec:
      description: "Get Ingress IP"
      command: "kubectl"
      arguments:
        - "get"
        - "service"
        - "{{bundle.parameters.helm_release}}-ingress-platorm-controller"
      flags:
        o: "json"
        namespace: "{{bundle.parameters.namespace}}"
      outputs:
        - name: "service_ip"
          jsonPath: "$.status.loadBalancer.ingress[0].ip"

uninstall:
  - helm3:
      description: "Uninstall SPAICER Platform Edge with Helm"
      purge: true
      releases:
        - "{{bundle.parameters.helm_release}}"